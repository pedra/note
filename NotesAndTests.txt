### src/app/app.mjs

// Teste com DB SqLite ------------------------- deletar (begin)
import { User, Users } from './db/user.mjs'
// Teste com DB SqLite ------------------------- deletar (end)


## na funÃ§Ã£o "INIT"

		this.windows.create('main', { // no frame window
			titleBarStyle: 'hidden',
			titleBarOverlay: true,
		})

		// Config TESTE
		// const config = await this.config.getItem('appname')
		// console.log('Config: ', config)
		// this.config.set('appname', 'Billxx Tools')
		// await this.config.save()


		// console.log('Config 2: ', await this.config.getItem('appname'), this.path.db)


		/*  TODO: #### MOVER PARA OUTRO ARQUIVO ðŸŸ¡ðŸŸ¡ðŸŸ¡ðŸŸ¡ðŸŸ¡ðŸŸ¡ðŸŸ¡
		
			* Carregar (load + loadByEmail) ...
			* Inserir (insert) ...
			* Atualizar (update) ...
			* Deletar (delete) ...
			* AutenticaÃ§Ã£o (login) ...
		
			âœ” TODOS PASSARAM âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨
		*/

		//  const user = new User()

		//  const login = await user.login('prbr@ymail.com', '12345678')
		//  console.log("\n\n\nLogin: ", login, "\n\n\n")

		// // Insert
		// user.clear()
		// user.set({
		// 	name: 'Priscila dos Santos ValadÃ£o',
		// 	level: 200,
		// 	email: 'priscila@email.com',
		// 	password: '123456'
		// })
		// const insert = await user.save()
		// console.log("\n\nInsert: ", insert, "\n\n\n")

		// user.set('level', 33)
		// const update = await user.save()
		// console.log("\n\nUpdate: ", update, "\n\n\n")

		// const load = await user.load(2)
		// console.log("\n\nLoad: ", load, "\n\n\n")

		// const loadByEmail = await user.loadByEmail('prbr@ymail.com')
		// console.log("\n\nLoadByEmail: ", loadByEmail, "\n\n\n")

		// user.load(7)
		// const del = await user.delete()
		// console.log("\n\nDelete: ", del, "\n\n\n")

		// const unDelete = await user.unDelete()
		// console.log("\n\nUnDelete: ", unDelete, "\n\n\n")

		/* 
		
			TODO: Criar classe Users (plural) e testar. 
		
			1 - Deve retornar uma array de User
			2 - Ter funÃ§Ãµes de busca (por nome, level, email) 
			3 - Deve ter busca em campo genÃ©rico (campo que ainda nÃ£o existe nessa tabela USER [future])
		
		*/

		//  const users = new Users()
		//  const list = await users.load()
		//  console.log("USERS LOAD:", list) // âœ” PASSOU!!

		// const query = await users.search(33, ['level'])
		// console.log("USERS SEARCH:", query) // âœ” PASSOU!!

~~~